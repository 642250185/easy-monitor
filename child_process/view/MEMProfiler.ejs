<script src="/docs/Chart.js"></script><!doctype html>
<html>
<head>
    <title>Easy-Monitor</title>
    <link href="/docs/styles.css" rel="stylesheet">
    <script src="/assets/jquery/jquery.min.js"></script>
    <script src="/docs/prettify.js"></script>
    <script src="/docs/Chart.js"></script>
    <script type="text/javascript">try {Typekit.load();} catch (e) {}</script>
    <script src="/echarts.min.js"></script>
</head>
<body>
<div class="redBorder"></div>
<div class="greenBorder"></div>
<div class="yellowBorder"></div>
<div id="wrapper">
    <nav>
        <dl>
        </dl>
    </nav>

    <div id="contentWrapper">
        <h1 id="mainHeader">Memory Leak</h1>
        <h2 id="introText"><a href="/CPUProfiler/<%- processName %>::<%- processPid %>">Pid:<%- processPid %></a> Heapnapshot Statistics By <a href="/">Easy-Monitor</a></h2>

        <article id="statistics">

            <h1>Heap Status</h1>
            <h2>Summary</h2>
            <pre><code>
            <%
                let statisticsKey = Object.keys(statistics)
                let statisticsLength = statisticsKey.length;
                for(let i=0; i<statisticsLength; i++){
                    let item = statistics[statisticsKey[i]];
            %>
<%- (i+1) %> "<%- statisticsKey[i] %>": <%- parseInt(statistics[statisticsKey[i]]/1024) %> KB
            <% } %>
                </code></pre>

            <h2>Statistics</h2>
            <div id="statstics" style="width: 600px;height:400px;"></div>
        </article>


        <article id="LeakPoint">
            <h1>Memory Leak</h1>
            <h2>Suspicious Leak Point List</h2>
            <p>I think the most probable leak point can be things who take maximum heap memory.</p>
            <p>So I filter out the biggest <%- leak_limit %> nodes ( DESC by "RetainedSize" ): </p>
            <pre><code>
1. name&id: "Object::@727", type: "object", retainedSize: "235259232 bytes", taken "99.77%" of all heap memory.

2. name&id: "system / Context::@759", type: "object", retainedSize: "232037472 bytes", taken "98.40%" of all heap memory.

3. name&id: "Object::@48387", type: "object", retainedSize: "232036208 bytes", taken "98.40%" of all heap memory.

4. name&id: "TimersList::@48389", type: "object", retainedSize: "232023424 bytes", taken "98.39%" of all heap memory.

5. name&id: "Timeout::@49263", type: "object", retainedSize: "232022848 bytes", taken "98.39%" of all heap memory.
                </code></pre>
            <p>Below are gravity diagram, which can help you find leak point details.</p>
            <h2>Leak Point Detail: @727</h2>
            <p>Object::@727, it's retainSize is: 235259232/1024 KB, below is gravity diagram: </p>
            <div id="leakPoint1" style="width: 600px;height:600px;"></div>

        </article>
    </div>
</div>
</body>
<script>
    $(document).ready(function () {

        var $nav = $("nav dl");

        $("article").each(function () {
            var $el = $(this);
            var $h1 = $el.find("h1");
            var sectionTitle = $h1.html();
            var articleId = $el.attr("id");
            var $dt = $("<dt><a href=\"#" + articleId + "\">" + sectionTitle + "</a></dt>");

            $dt.find("a").on("click", function (e) {
                e.preventDefault();
                $('html,body').animate({scrollTop: $h1.offset().top}, 400);
            });


            $nav.append($dt);

            var $subtitles = $el.find("h2");

            $subtitles.each(function () {
                var $h2 = $(this);
                var title = $h2.text();
                var newID = articleId + "-" + camelCase(title);
                $h2.attr("id", newID);
                var $dd = $("<dd><a href=\"#" + newID + "\">" + title + "</a></dd>");

                $dd.find("a").on("click", function (e) {
                    e.preventDefault();
                    $('html,body').animate({scrollTop: $h2.offset().top}, 400);
                })
                $nav.append($dd);

            });

            var $articles = $el.find("article");

        });

        prettyPrint();

        function camelCase(str) {
            var splitString = str.split(" ");

            var returnedCamel = splitString[0].toLowerCase();

            for (var i = 1; i < splitString.length; i++) {
                returnedCamel += splitString[i].charAt(0).toUpperCase() + splitString[i].substring(1).toLowerCase();
            }

            return returnedCamel;

        }
    });
</script>
<script type="text/javascript">
    // 基于准备好的dom，初始化echarts实例
    var myChart = echarts.init(document.getElementById('statstics'));

    // 指定图表的配置项和数据
    var option = {
        title: {
            text: 'Pid:<%- processPid %>',
            subtext: 'HeapSnapshot Statistics',
            x: 'center'
        },
        tooltip: {
            trigger: 'item',
            formatter: "{a} <br/>{b} : {c} ({d}%)"
        },
        legend: {
            orient: 'vertical',
            left: 'left',
            data: []
        },
        series: [
            {
                name: 'HeapSnapshot',
                type: 'pie',
                radius: '55%',
                center: ['50%', '60%'],
                data: [],
                itemStyle: {
                    emphasis: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }
        ]
    };

    option.series[0].data = <%- JSON.stringify(Object.keys(statistics).reduce((pre, next)=>{
        if(next !== 'total' && next !== 'v8heap'){
            pre.push({name:next, value: statistics[next]})
        }
        return pre;
    }, [])) %>

    option.legend.data = <%- JSON.stringify(Object.keys(statistics).filter(key=>key !== 'total' && key !== 'v8heap')) %>




    // 使用刚指定的配置项和数据显示图表。
    myChart.setOption(option);
</script>

<script type="text/javascript">
    // 基于准备好的dom，初始化echarts实例
    var myChart = echarts.init(document.getElementById('leakPoint1'));

    // 指定图表的配置项和数据
    var option1 = {
        title: {
            text: '',
        },
        tooltip: {},
        animationDurationUpdate: 1500,
        animationEasingUpdate: 'quinticInOut',
        series: [
            {
                type: 'graph',
                layout: 'none',
                symbolSize: 50,
                roam: false,
                label: {
                    normal: {
                        show: true
                    }
                },
                edgeSymbol: ['circle', 'arrow'],
                edgeSymbolSize: [4, 10],
                edgeLabel: {
                    normal: {
                        textStyle: {
                            fontSize: 20
                        }
                    }
                },
                data: [{
                    name: '@723',
                    value: 2000,
                    x: 2,
                    y: 0
                }, {
                    name: '节点2',
                    x: 0,
                    y: 2
                }, {
                    name: '节点3',
                    x: 4,
                    y: 2
                }, {
                    name: '节点4',
                    x: 2,
                    y: 4
                }],
                // links: [],
                links: [{
                    source: 0,
                    target: 1,
                    symbolSize: [5, 20],
                    label: {
                        normal: {
                            show: true
                        }
                    },
                    lineStyle: {
                        normal: {
                            width: 5,
                            curveness: 0.2
                        }
                    }
                }, {
                    source: '节点2',
                    target: '节点1',
                    label: {
                        normal: {
                            show: true
                        }
                    },
                    lineStyle: {
                        normal: {curveness: 0.2}
                    }
                }, {
                    source: '节点1',
                    target: '节点3'
                }, {
                    source: '节点2',
                    target: '节点3'
                }, {
                    source: '节点2',
                    target: '节点4'
                }, {
                    source: '节点1',
                    target: '节点4'
                }],
                lineStyle: {
                    normal: {
                        opacity: 0.9,
                        width: 2,
                        curveness: 0
                    }
                }
            }
        ]
    };


    // 使用刚指定的配置项和数据显示图表。
    myChart.setOption(option1);
</script>

</html>